import logging
import os
import gspread
from aiogram import Bot, Dispatcher, executor, types
from oauth2client.service_account import ServiceAccountCredentials

# üîê –¢–æ–∫–µ–Ω –ë–æ—Ç–∞
BOT_TOKEN = "8017841130:AAFL7uWSx6rxRzy0W2151cGHUpN5ICbEkpU"

# üìä –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã
SPREADSHEET_NAME = "OptoMarkaz_Tovary"

# üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è Google Sheets
scope = [
    "https://spreadsheets.google.com/feeds",
    "https://www.googleapis.com/auth/drive"
]

creds = ServiceAccountCredentials.from_json_keyfile_name("src/service_account.json", scope)
client = gspread.authorize(creds)
sheet = client.open(SPREADSHEET_NAME).sheet1

# ü§ñ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–æ—Ç–∞
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher(bot)
logging.basicConfig(level=logging.INFO)

# üîπ –°—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    await message.reply(
        "üëã –°–∞–ª–æ–º –≤–∞ —Ö—É—à –æ–º–∞–¥–µ–¥ –±–∞ OptoMarkaz B2B –±–æ—Ç!\n"
        "–®—É–º–æ –º–µ—Ç–∞–≤–æ–Ω–µ–¥:\n"
        "üõí –ò–ª–æ–≤–∞–∏ –º–æ–ª: –º–æ–ª, –Ω–∞—Ä—Ö, –º–∏“õ–¥–æ—Ä (–±–æ –≤–µ—Ä–≥—É–ª)\n"
        "üì¶ –î–∏–¥–∞–Ω–∏ —Ä”Ø–π—Ö–∞—Ç–∏ –º–æ–ª“≥–æ: /list"
    )

# üîπ “ö–∞–±—É–ª–∏ –º–∞—ä–ª—É–º–æ—Ç–∏ –º–æ–ª“≥–æ
@dp.message_handler(lambda message: ',' in message.text)
async def add_product(message: types.Message):
    try:
        name, price, qty = [x.strip() for x in message.text.split(',')]
        sheet.append_row([name, price, qty, message.from_user.full_name])
        await message.reply("‚úÖ –ú–æ–ª –±–æ –º—É–≤–∞—Ñ—Ñ–∞“õ–∏—è—Ç –∏–ª–æ–≤–∞ —à—É–¥!")
    except Exception as e:
        await message.reply(f"‚ö†Ô∏è –•–∞—Ç–æ “≥–∞–Ω–≥–æ–º–∏ –∏–ª–æ–≤–∞ –∫–∞—Ä–¥–∞–Ω: {e}")

# üîπ –ù–∏—à–æ–Ω –¥–æ–¥–∞–Ω–∏ —Ä”Ø–π—Ö–∞—Ç–∏ –º–æ–ª“≥–æ
@dp.message_handler(commands=['list'])
async def list_products(message: types.Message):
    try:
        rows = sheet.get_all_values()[1:]  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
        if not rows:
            await message.reply("üì≠ –†”Ø–π—Ö–∞—Ç–∏ –º–æ–ª“≥–æ —Ö–æ–ª”£ –∞—Å—Ç.")
            return
        text = "üì¶ –†”Ø–π—Ö–∞—Ç–∏ –º–æ–ª“≥–æ:\n"
        for row in rows:
            name, price, qty = row[:3]
            text += f"üîπ {name} ‚Äî {price} —Å–æ–º, –º–æ–Ω–¥–∞: {qty}\n"
        await message.reply(text)
    except Exception as e:
        await message.reply(f"‚ö†Ô∏è –•–∞—Ç–æ–∏ —Ö–æ–Ω–¥–∞–Ω–∏ —Ä”Ø–π—Ö–∞—Ç: {e}")

# üîÅ –ó–∞–ø—É—Å–∫
if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
